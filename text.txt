 So in this video, we're going to try and learn as much Python as we can in five minutes. So let's get started. So the comment and Python, we use the hashtag and then whatever we want to say, we can use multi line comments with three double quotes. We can put in our comments here and then end it with three double quotes. Of course, we can do addition, we can do subtraction, multiplication, and division. We can also store data in our program using variables. So to create a variable, we give it a name. We set it equal to a value. In this case, a string called Hello World strings in Python, use either double quotes or single quotes, the choices yours, and there is our variable. We can also store multiple strings in a variable if we want using something called a list. So I could create a variable called B and say, I want to store two strings this time, I store the word Hello World and the word Francis. Hit enter and we store that in a list using two square brackets to say that we want to use a list and we tell it all the items we want to store separated by a comma. To get an item out of a list, we need to know its position in the list. So this is position zero and this is position one. So if I said B square brackets one, it'll print out the item in the list at position one. We can also add lists together so I could say B plus a new list, one, two, three, four, five, hit enter and now we have a new list with two strings and five numbers in it. That's another great thing about Python lists. They automatically resize and they can store any data type you want or multiple data types. Next, we're going to learn about dictionaries. So dictionaries are just like lists except to access data in a dictionary instead of using its position in the list, we need to use its name. So every item in a dictionary has a name what you call a key. So a creative variable called say when we use two cardi brackets to say we want to create a dictionary and its name is going to be Fave Color and it's going to give us back the string Hello World. So we hit enter and now if I say say use the square brackets again and I put in the word Fave Color, we get the word Hello World printed back. That would be called an associate of array and other languages like PHP for example. Finally we have sets. So a set is just like a list except it doesn't have order and it doesn't have repetition. So to create a set in Python, we create a variable. We use two cardi brackets again, but we don't use the colon when we're creating a set. We just give it a list of values and I'm going to repeat some like this, save that and now we want to see our set. You can see there are no repeated values. Everything I repeated just was ignored when we created the set. We can also add logic to a Python program. So if we want a certain action to only happen in certain circumstances, we would say if say one equals one, then we will print out the word. Of course, and we run that and you can see it printed out. If I said one equals two, obviously not because that isn't true and you could see that code never got run. So Python has equals operators. It also has not equals. It has greater than less than greater than equal to less than equal to all of the operators you would expect. Python also has Boolean data types. So if you say the word true or the word false with a capital letter and we can also use Boolean operators so I could say true or false and that will give us true. I could say true and false and that will give us false. Python also has loops. It has wild loops and for loops. So we have a list here called B and we can loop over every item in a list using a for loop. So if I say four item in B because that's the name of our list and we're going to refer to every item as item. That's what this variable does. So if I wanted to print every item in the list, I would say I want to print item run that and you can see it prints the two items. Four loops can also use numbers. So I could say four I in range and the range is going to be zero to 10 and I'll say print I. This will print out the number I 10 times as you'd expect. We also have wild loops. So I could create a variable called X and set it equal to 10 and I could say wild X is greater than zero print X and that'll also say X minus equals one to subtract X to prevent an infinite loop. So I run that you can say it comes down from 10. Python also has what are called exceptions. Whenever something goes wrong in your program, sometimes the program doesn't have to crash. Sometimes the error can be caught as an exception and can hopefully continue to run. So an example of an exception is we go back to our list called B and the first item is called zero and the second item is called one. But if I was to put in the number two here, you can see we get an index error. So I can say try and I can try to print an element from our list that doesn't exist. But of course it doesn't exist so it's going to give us that index error. So what I can say is accept index error and I can say item not in list. So you can see we get this text instead of this big error message now. Python also lets us create function. So if we want to run some code multiple times without typing it in again, we can create a function. So I call it funk and it's just going to print hello world. So now if I run funk, it's going to print hello world and I can run it twice and it's going to print it twice. So that is a simple function. I can also create objects in Python. So we would use an object for object oriented programming. So say we wanted to create an object for people. We might create an object called person to do that. We would create a class called person and we create a special function called underscore underscore in it underscore underscore which is called a constructor. And we pass it the variable self every method in a Python object starts with the variable self. So a constructor is a function that's run when we create our object. So I'm just going to print a new person. Now we created our person class which is the blueprint for our person object. So I can create a new person object by saying pay equals person just like that. And you can see our constructor was called when we created the object and it printed new person. And there is our person object. We can also use inheritance because that's one of the core concepts of object oriented programming. So say I wanted a more specific class called frances inside these run brackets. I can say person that will mean I can use any of the methods and functions from the person class. So in this class, I would say my name is frances. So what I say is super dot in it to call this special in it function. Now I have my frances class. And now if I was to just say f equals frances. And finally, we're going to go over modules. So in Python, we use modules because we don't want to type everything over and over and over again. So if I import math, that will import the Python math library. And if I say print math.py, it prints out the value of pi because my program didn't know that until I imported the math library. So that's a really quick overview of Python. There's a lot of stuff I didn't get to cover, but we're going to cover that in separate videos in much more detail. But that's it for this video. Don't forget to like, comment, favorite and subscribe. Don't forget to follow us on Facebook, Twitter and Reddit. But that's it for this video. I'll see you next time.